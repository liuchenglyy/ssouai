<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxnx.uam.model.mapper.BlacklistMapper" >
  <resultMap id="BaseResultMap" type="com.sxnx.uam.model.entity.Blacklist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="blacklist_type" property="blacklistType" jdbcType="VARCHAR" />
    <result column="blacklist_name" property="blacklistName" jdbcType="VARCHAR" />
    <result column="create_userid" property="createUserid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, blacklist_type, blacklist_name, create_userid, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from blacklist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blacklist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxnx.uam.model.entity.Blacklist" >
    <selectKey keyColumn="id" resultType="int" keyProperty="id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blacklist ( blacklist_type, blacklist_name, create_userid, create_time)
    values (#{blacklistType,jdbcType=VARCHAR}, #{blacklistName,jdbcType=VARCHAR},
    #{createUserid,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sxnx.uam.model.entity.Blacklist" >
    update blacklist
    <set >
      <if test="blacklistType != null" >
        blacklist_type = #{"blacklistType,jdbcType=VARCHAR},
      </if>
      <if test="blacklistName != null" >
        blacklist_name = #{blacklistName,jdbcType=VARCHAR},
      </if>
      <if test="createUserid != null" >
        create_userid = #{createUserid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>